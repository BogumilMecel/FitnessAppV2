import com.gmail.bogumilmecel2.fitnessappv2.common.domain.model.MeasurementUnit;
import com.gmail.bogumilmecel2.fitnessappv2.common.domain.model.NutritionValues;
import com.gmail.bogumilmecel2.fitnessappv2.feature_diary.domain.model.product.NutritionValuesIn;
import kotlin.Int;
import kotlinx.datetime.LocalDateTime;

CREATE TABLE IF NOT EXISTS SqlProduct (
    id TEXT PRIMARY KEY,
    name TEXT,
    container_weight INTEGER AS Int,
    nutrition_values_in TEXT AS NutritionValuesIn,
    measurement_unit TEXT AS MeasurementUnit,
    nutrition_values TEXT AS NutritionValues,
    barcode TEXT,
    username TEXT,
    user_id TEXT,
    creation_date_time TEXT AS LocalDateTime
);

-- Get products
getProducts:
SELECT * FROM SqlProduct
WHERE (:userId IS NULL OR user_id = :userId)
  AND (:searchText IS NULL OR name LIKE '%' || :searchText || '%')
ORDER BY creation_date_time DESC LIMIT :limit OFFSET :offset;

-- Insert product
insertProduct:
INSERT OR REPLACE INTO SqlProduct VALUES (
  :id, :name, :containerWeight, :nutritionValuesIn,
  :measurementUnit, :nutritionValues, :barcode, :username,
  :userId, :creationDateTime
);

-- Get product by ID
getProduct:
SELECT * FROM SqlProduct WHERE id = :productId LIMIT 1;